workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - when: never

stages:
  - validate
  - lint
  - build
  - scan
  - deploy


variables:
  DOCKER_IMAGE: rogerramossilva/myapp

.default-slack-notify:
  after_script:
    - >
      curl -X POST -H 'Content-type: application/json' --data "{
        \"text\": \"âœ… *Job finalizado:* $CI_JOB_NAME\nStatus: $CI_JOB_STATUS\nProjeto: $CI_PROJECT_NAME\nBranch: $CI_COMMIT_BRANCH\nCommit: $CI_COMMIT_SHORT_SHA\nLink: <$CI_PROJECT_URL/-/jobs/$CI_JOB_ID|Ver Job>\"
      }" $SLACK_WEBHOOK_URL || true

validate-compose:
  stage: validate
  script:
    - docker compose config
  rules:
    - exists:
        - docker-compose.yml
    - if: '$CI_COMMIT_BRANCH == "main"'
  extends:
    - .default-slack-notify

lint-php:
  stage: lint
  script:
    - find src/ -name "*.php" -exec php -l {} \;
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "main"'
  extends:
    - .default-slack-notify

build-image:
  stage: build
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  extends:
    - .default-slack-notify

security-scan:
  stage: scan
  script:
    - trivy image --format json --output trivy-report.json $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA || true
  artifacts:
    name: "trivy-report"
    paths:
      - trivy-report.json
    when: always
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
  extends:
    - .default-slack-notify

push-staging:
  stage: deploy
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE:staging
    - docker push $DOCKER_IMAGE:staging
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  extends:
    - .default-slack-notify


push-production:
  stage: deploy
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:latest
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  extends:
    - .default-slack-notify
